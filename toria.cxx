export module toria;

export import :uuid;
export import :generators;
export import :std;

import std;
import :sha1;
import :md5;

namespace toria
{
	// clang-format off
	// Nil uuid
	export constexpr uuid nil {{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,0x00, 0x00}};
	// Max uuid
	export constexpr uuid max {{0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,0xff, 0xff}};
	// Name string is a fully-qualified domain name
	export constexpr uuid namespace_dns {{0x6b,0xa7,0xb8,0x10,0x9d,0xad,0x11,0xd1,0x80,0xb4,0x00,0xc0,0x4f,0xd4,0x30,0xc8}};
	// Name string is a URL
	export constexpr uuid namespace_url{{0x6b,0xa7,0xb8,0x11,0x9d,0xad,0x11,0xd1,0x80,0xb4,0x00,0xc0,0x4f,0xd4,0x30,0xc8}};
	//Name string is an ISO OID
	export constexpr uuid namespace_oid{{0x6b,0xb8,0xa7,0x12,0x9d,0xad,0x11,0xd1,0x80,0xb4,0x00,0xc0,0x4f,0xd4,0x30,0xc8}};
	//Name string is an X.500 DN (in DER or a text output format)
	export constexpr uuid namespace_x500{{0x6b,0xa7,0xb8,0x14,0x9d,0xad,0x11,0xd1,0x80,0xb4,0x00,0xc0,0x4f,0xd4,0x30,0xc8}};
	// clang-format on

	//export using v1 = generators::v1_generator;
	export using v3 = generators::name_generator<3,detail::md5>;
	export using v4 = generators::v4_generator<std::mt19937>;
	export using v5 = generators::name_generator<5,detail::sha1>;
	export using v6 = generators::v6_generator;
	export using v7 = generators::v7_generator<std::mt19937>;
}  // namespace uuids

